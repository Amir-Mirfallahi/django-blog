services:
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: stage_user
      POSTGRES_PASSWORD: C8(dn(lk)6^@
      POSTGRES_DB: django_blog_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build: .
    container_name: backend
    command: sh -c "cd ./core && uv run manage.py makemigrations && uv run manage.py migrate && uv run manage.py collectstatic --noinput && uv run gunicorn core.wsgi --bind 0.0.0.0:8000"
    volumes:
      - ./core:/app/core
      - static_volume:/app/core/static
      - media_volume:/app/core/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DEBUG=False
    depends_on:
      - redis

  worker:
    build: .
    command: sh -c "cd core && uv run celery -A core worker --loglevel=info"
    volumes:
      - ./core:/app/core
    env_file:
      - .env
    depends_on:
      - redis
      - backend
  beat:
    build: .
    command: sh -c "cd core && uv run celery -A core beat --loglevel=info"
    volumes:
      - ./core:/app/core
    env_file:
      - .env
    depends_on:
      - redis
      - backend

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - redis
      - backend

volumes:
  static_volume:
  media_volume:
  postgres_data:
